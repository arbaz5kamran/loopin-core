"""Add username column to users

Revision ID: 367db610ad2f
Revises: 7efdd8e85bb0
Create Date: 2025-08-02 02:24:39.332853

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '367db610ad2f'
down_revision = '7efdd8e85bb0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=80), nullable=False))
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               postgresql_using='id::integer')
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('users_name_key'), type_='unique')
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('name')
        # Note: role column may not exist in fresh databases, skip dropping it

    # ### end Alembic commands ###


def downgrade():
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Note: role column may not exist in fresh databases, skip adding it back
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint(batch_op.f('users_name_key'), ['name'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column(
            'password_hash',
            existing_type=sa.String(length=128),
            type_=sa.VARCHAR(length=255),
            existing_nullable=False
        )
        batch_op.alter_column(
            'id',
            existing_type=sa.Integer(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
            postgresql_using="id::varchar"
        )
        batch_op.drop_column('username')


    # ### end Alembic commands ###

