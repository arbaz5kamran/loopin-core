name: CI

on:
  workflow_dispatch: {}
  push:
    branches: [ refactor/api-blueprints, master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Set up Node (for asset build)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build CSS assets (if package.json present)
        run: |
          if [ -f package.json ]; then npm ci && npm run build:css; fi
      - name: Upload built CSS artifact (if present)
        uses: actions/upload-artifact@v4
        with:
          name: built-css
          path: |
            static/dist/styles.css
          if-no-files-found: warn
      - name: Run tests
        run: |
          python -m pytest -q

  deploy-assets:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Download built css artifact
        uses: actions/download-artifact@v4
        with:
          name: built-css
          path: dist_artifacts
        continue-on-error: true
      - name: Check for built CSS
        id: check
        run: |
          if [ -f dist_artifacts/static/dist/styles.css ]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi
      - name: Deploy to GitHub Pages (static/dist)
        if: steps.check.outputs.deploy == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist_artifacts/static

  deploy-s3:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && env.S3_BUCKET
    env:
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
    steps:
      - uses: actions/checkout@v4
      - name: Download built css artifact
        uses: actions/download-artifact@v4
        with:
          name: built-css
          path: dist_artifacts
        continue-on-error: true
      - name: Check for built CSS
        id: check_s3
        run: |
          if [ -f dist_artifacts/static/dist/styles.css ]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi
      - name: Configure AWS credentials
        if: steps.check_s3.outputs.deploy == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Sync to S3
        if: steps.check_s3.outputs.deploy == 'true'
        run: |
          aws s3 sync dist_artifacts/static s3://$S3_BUCKET/static --acl public-read --delete
*** End Patch